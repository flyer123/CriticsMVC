@model Test_Google_Api.Models.ViewModel.ReviewModel

@{
    ViewBag.Title = Model.Name + " рецензия!";
    string reviewText = Model.Text.Replace('#', ' ');
}
<main>
    <section class="well">
        <div class="container">
            <h3>Ресторан @Model.Name</h3>
            <div class="review-date">
                Дата рецензии: <time datetime="2015-10-25">@Model.Date.Value.ToShortDateString()</time>
            </div>
            <div class="row">
                <div class="col-xs-12 col-sm-5">
                    <h4>Рейтинги:</h4>
                    <ul class="rating-list">
                        <li>
                            @switch (Model.KitchenMark)
                            {//вывод оценки за кухню
                                case 1:
                                    @:<span class="star-rating star-rating1">
                                        break;
                                case 2:
                                @:<span class="star-rating star-rating2">
                                        break;
                                case 3:
                                @:<span class="star-rating star-rating3">
                                        break;
                                case 4:
                                @:<span class="star-rating star-rating4">
                                    break;
                                case 5:
                                @:<span class="star-rating star-rating5">
                                        break;
                            }

                            <span class="fa fa-star"></span>
                            <span class="fa fa-star"></span>
                            <span class="fa fa-star"></span>
                            <span class="fa fa-star"></span>
                            <span class="fa fa-star"></span>
                        </span>
                        <span class="list-item">Кухня</span>
    </li>
    <li>
        @switch (Model.InteriorMark)
        {//вывод оценки за интерьер
            case 1:
                @:<span class="star-rating star-rating1">
                                        break;
            case 2:
            @:<span class="star-rating star-rating2">
                                        break;
            case 3:
            @:<span class="star-rating star-rating3">
                                        break;
            case 4:
            @:<span class="star-rating star-rating4">
                                    break;
            case 5:
            @:<span class="star-rating star-rating5">
                                        break;
        }
        <span class="fa fa-star"></span>
        <span class="fa fa-star"></span>
        <span class="fa fa-star"></span>
        <span class="fa fa-star"></span>
        <span class="fa fa-star"></span>
    </span>
    <span class="list-item">Интерьер</span>
</li>
<li>
    @switch (Model.ServiceMark)
    {//вывод оценки за сервис
        case 1:
            @:<span class="star-rating star-rating1">
                                        break;
        case 2:
        @:<span class="star-rating star-rating2">
                                        break;
        case 3:
        @:<span class="star-rating star-rating3">
                                        break;
        case 4:
        @:<span class="star-rating star-rating4">
                                    break;
        case 5:
        @:<span class="star-rating star-rating5">
                                        break;
    }
    <span class="fa fa-star"></span>
    <span class="fa fa-star"></span>
    <span class="fa fa-star"></span>
    <span class="fa fa-star"></span>
    <span class="fa fa-star"></span>
</span>
<span class="list-item">Обслуживание</span>
</li>
<li>


    @switch ((Model.InteriorMark + Model.KitchenMark + Model.ServiceMark) / 3)
    {//считаем общую оценку
        case 1:
            @:<span class="star-rating star-rating1">
                                        break;
        case 2:
        @:<span class="star-rating star-rating2">
                                        break;
        case 3:
        @:<span class="star-rating star-rating3">
                                        break;
        case 4:
        @:<span class="star-rating star-rating4">
                                    break;
        case 5:
        @:<span class="star-rating star-rating5">
                                        break;
    }
    <span class="fa fa-star"></span>
    <span class="fa fa-star"></span>
    <span class="fa fa-star"></span>
    <span class="fa fa-star"></span>
    <span class="fa fa-star"></span>
</span>
<span class="list-item">Итоговый рейтинг</span>
</li>
</ul>
</div>
<div class="col-xs-12 col-sm-7">
    <h4>Контактные данные:</h4>
    <ul class="list2">
        <li>
            <span class="list2-name">Адрес:</span>
            @Model.Address
        </li>
        <li>
            <span class="list2-name">Телефон:</span>
            @{
                string[] phones = @Model.Phone.Split(',');
            }

            @foreach (var v in phones)
            {
                int i = 0;
                if (i == phones.Length - 1)
                {
                    <a href="callto:#">@v</a>}
                else
                {<a href="callto:#">@v,</a>}
            }
        </li>
        <li>
            <span class="list2-name">Время работы:</span>
            @Model.WorkHours
        </li>
    </ul>
</div>
</div>
<div class="row">
    <div class="col-xs-12 col-sm-8">

        <div class="owl-carousel owl-carousel2">
            @if (Directory.Exists((Server.MapPath("~/images/Restaurants/rest_" + @Model.Id.ToString()))))
            {
                foreach (var imgPath in Directory.GetFiles(Server.MapPath("~/images/Restaurants/rest_" + @Model.Id.ToString()), "*.*"))
                {
                    var img = new FileInfo(imgPath);
                    <div class="item">
                        <img src="@Url.Content(String.Format("~/images/Restaurants/rest_" + @Model.Id.ToString() + "/{0}", img.Name))" alt="" />
                    </div>
                }
            }
        </div>
    </div>

    <div class="col-xs-12 col-sm-4">
        <h4>Характеристики:</h4>
        <ul class="list2">
            <li>
                <span class="list2-name">Тип кухни:</span>
                @Model.KitchenType
            </li>
            <li>
                <span class="list2-name">Средний счет:</span>
                @Model.Amount.ToString()
            </li>
            <li>
                <span class="list2-name">Предложения:</span>
                @Model.Propositions
            </li>
            <li>
                <span class="list2-name">Музыка:</span>
                @Model.Music
            </li>
            <li>
                <span class="list2-name">Детям:</span>
                @Model.Children
            </li>
        </ul>
    </div>
</div>
<div class="row">
    <div class="col-xs-12 col-sm-4">
        <h4>На карте:</h4>
        <section class="map">
            <div id="google-map-sm" class="map_model_2"></div>
        </section>
        <script type="text/javascript">
            var data = @Html.Raw(Json.Encode(Model));
            var myLatLng = { lat: data.Lat, lng: data.Lng };
            function initialize()
            {
                var map = new google.maps.Map(document.getElementById('google-map-sm'), {
                    zoom: 18,
                    center: myLatLng
                });
                //var bounds = new google.maps.LatLngBounds();
                //bounds.extend(latlng);
                var marker = new google.maps.Marker({position: myLatLng, map: map, icon:'/images/gmap_marker_rest.png'});
                //map.fitBounds(bounds);
            }
            google.maps.event.addDomListener(window, 'load', initialize);
        </script>
    </div>
    <div class="col-xs-12 col-sm-8">
        <h4>Рецензия:</h4>
        <div class="review-text">
            <p>@reviewText</p>
        </div>
        <br>
        <p>Поделитесь рецензией с друзьями:</p>
        <div class="social-block">
            <script type="text/javascript">
                (function () {
                    if (window.pluso) if (typeof window.pluso.start == "function") return;
                    if (window.ifpluso == undefined) {
                        window.ifpluso = 1;
                        var d = document, s = d.createElement('script'), g = 'getElementsByTagName';
                        s.type = 'text/javascript'; s.charset = 'UTF-8'; s.async = true;
                        s.src = ('https:' == window.location.protocol ? 'https' : 'http') + '://share.pluso.ru/pluso-like.js';
                        var h = d[g]('body')[0];
                        h.appendChild(s);
                    }
                })();
            </script>
            <div class="pluso" data-background="transparent" data-options="medium,square,line,horizontal,nocounter,theme=01" data-services="google,vkontakte,twitter,facebook,pinterest"></div>
        </div>
    </div>
</div>
</div>
</section>
</main>
@{ Html.RenderAction("LabelView", "Home", new { num = Model.Id }); }



